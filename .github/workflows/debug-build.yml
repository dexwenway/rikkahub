name: Build Debug APK

on:
  workflow_dispatch:  # 允许手动一键触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup google-services.json for debug build
        run: |
          cat > app/google-services.json << 'EOL'
          {
            "project_info": {
              "project_number": "000000000000",
              "project_id": "debug-project-id"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "1:000000000000:android:0000000000000000000000",
                  "android_client_info": {
                    "package_name": "me.rerere.rikkahub.debug"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "debug-api-key"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }
          EOL
          echo "Created google-services.json file"
          ls -la app/

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Log Gradle version
        run: ./gradlew --version  # 添加日志：输出Gradle版本以验证环境

      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace --info

      - name: List build outputs
        run: |
          echo "=== Build outputs ==="
          find . -name "*.apk" -type f 2>/dev/null || echo "No APK files found"
          echo "=== App build directory ==="
          ls -la app/build/outputs/apk/debug/ 2>/dev/null || echo "Debug APK directory not found"

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ github.run_number }}
          path: |
            app/build/outputs/apk/debug/*.apk
          if-no-files-found: error
          retention-days: 30
